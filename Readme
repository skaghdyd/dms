# DMS(문서 관리 시스템) API 문서

##프로젝트 세팅
1. git clone https://github.com/skaghdyd/dms.git
2. 인텔리제이 프로젝트로 열기
3. gradle.propeties에 jdk 23 버전 설정
  ex: org.gradle.java.home=C:\\Program Files\\Java\\jdk-23
3. cd frontend && npm install && npm run dev
4. cd backend && ./gradlew build && ./gradlew bootRun
5. 프론트 주소로 접속 ex) localhost:5173
6. 회원가입 후 로그인
7. 문서 기능, 게시판 기능, 첨부파일 기능, 댓글 기능, 테마기능 등을 확인


## 1. 인증 API

### 1.1 회원가입
- **엔드포인트**: `POST /api/auth/signup`
- **설명**: 새로운 사용자 계정을 생성합니다.
- **요청 본문**:
{
  "username": "string", // 최소 4자 이상
  "password": "string"  // 최소 6자 이상
}
- **응답**: 
  - 성공: `200 OK` - "회원가입 성공!"
  - 실패: `400 Bad Request` - 유효성 검증 실패 메시지

### 1.2 로그인
- **엔드포인트**: `POST /api/auth/login`
- **설명**: 사용자 인증 및 JWT 토큰 발급
- **요청 본문**:
{
  "username": "string",
  "password": "string"
}
- **응답**:
  - 성공: `200 OK`
{
  "token": "JWT_TOKEN_STRING"
}
  - 실패: `401 Unauthorized`

### 1.3 사용자명 중복 확인
- **엔드포인트**: `GET /api/auth/check-username/{username}`
- **설명**: 사용자명 사용 가능 여부 확인
- **응답**: 
  - `true`: 사용 가능
  - `false`: 사용 불가능

## 2. 문서 API

### 2.1 문서 생성
- **엔드포인트**: `POST /api/documents`
- **설명**: 새로운 문서를 생성합니다.
- **인증**: 필수 (Bearer 토큰)
- **Content-Type**: `multipart/form-data`
- **요청 파라미터**:
  - `title`: 문서 제목 (필수, 최대 255자)
  - `content`: 문서 내용 (필수)
  - `files`: 첨부파일 (선택, 다중 파일 가능)
- **파일 제한**:
  - 최대 크기: 100MB
  - 허용 확장자: .pdf, .doc, .docx, .xls, .xlsx
- **응답**: 생성된 문서 정보

### 2.2 문서 수정
- **엔드포인트**: `PUT /api/documents/{id}`
- **설명**: 기존 문서를 수정합니다.
- **인증**: 필수 (Bearer 토큰)
- **요청 파라미터**:
  - `title`: 문서 제목
  - `content`: 문서 내용
  - `files`: 새로 추가할 파일들
  - `remainingFileIds`: 유지할 기존 파일 ID 목록
- **응답**: 수정된 문서 정보

### 2.3 문서 조회
- **엔드포인트**: `GET /api/documents/{id}`
- **설명**: 특정 문서의 상세 정보를 조회합니다.
- **인증**: 필수 (Bearer 토큰)
- **응답**: 문서 상세 정보

### 2.4 문서 목록 조회
- **엔드포인트**: `GET /api/documents`
- **설명**: 전체 문서 목록을 조회합니다.
- **인증**: 필수 (Bearer 토큰)
- **응답**: 문서 목록

## 3. 게시판 API

### 3.1 게시글 작성
- **엔드포인트**: `POST /api/posts`
- **설명**: 새로운 게시글을 작성합니다.
- **인증**: 필수 (Bearer 토큰)
- **Content-Type**: `multipart/form-data`
- **요청 파라미터**:
  - `request`: 게시글 정보 (JSON)
    - `title`: 제목 (필수)
    - `content`: 내용 (필수)
  - `files`: 첨부파일 (선택)
- **응답**: 생성된 게시글 정보

### 3.2 게시글 목록 조회
- **엔드포인트**: `GET /api/posts`
- **설명**: 게시글 목록을 페이징하여 조회합니다.
- **인증**: 필수 (Bearer 토큰)
- **쿼리 파라미터**:
  - `page`: 페이지 번호 (기본값: 0)
  - `size`: 페이지 크기 (기본값: 10)
  - `sort`: 정렬 기준 (예: createdAt,desc)
- **응답**: 페이징된 게시글 목록

### 3.3 게시글 검색
- **엔드포인트**: `GET /api/posts/search`
- **설명**: 키워드로 게시글을 검색합니다.
- **인증**: 필수 (Bearer 토큰)
- **쿼리 파라미터**:
  - `keyword`: 검색어
  - `searchType`: 검색 유형 (title, content, all)
  - `page`: 페이지 번호
  - `size`: 페이지 크기

## 4. 댓글 API

### 4.1 댓글 작성
- **엔드포인트**: `POST /api/comments`
- **설명**: 게시글에 댓글을 작성합니다.
- **인증**: 필수 (Bearer 토큰)
- **요청 본문**:
{
  "postId": "number",
  "content": "string"
}

### 4.2 댓글 목록 조회
- **엔드포인트**: `GET /api/comments/{postId}`
- **설명**: 특정 게시글의 댓글 목록을 조회합니다.
- **인증**: 필수 (Bearer 토큰)

## 5. 파일 API

### 5.1 파일 다운로드
- **엔드포인트**: `GET /api/files/download/{fileId}`
- **설명**: 파일을 다운로드합니다.
- **인증**: 필수 (Bearer 토큰)
- **응답**: 파일 스트림

### 5.2 파일 삭제
- **엔드포인트**: `DELETE /api/files/{fileId}`
- **설명**: 파일을 삭제합니다.
- **인증**: 필수 (Bearer 토큰)
- **응답**: `204 No Content`

## 보안 설정
- 모든 API 요청은 JWT 토큰 기반의 인증이 필요합니다.
- 토큰은 요청 헤더의 `Authorization: Bearer {token}` 형식으로 전달됩니다.
- 토큰 만료 시 자동으로 로그인 페이지로 리다이렉트됩니다.
- `/api/auth/**` 경로를 제외한 모든 API는 인증이 필요합니다.